@page "/fetchData"
@using MauiHybridAppDemo11.Models
@using MauiHybridAppDemo11.Services
@inject IStudentService StudentService
@inject NavigationManager NavManger

<h1>Student List</h1>

<p>This component demonstrates showing data.</p>

@if (students == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive">

        <table class="table">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Gender</th>
                    <th>Email</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in students)
                {
                    <tr>
                        <td>@student.FirstName</td>
                        <td>@student.LastName</td>
                        <td>@student.Gender</td>
                        <td>@student.Email</td>
                        <td>
                            <button type="submit" @onclick="@(()=>EditStudent(student.StudentId))" class="mt-2 btn btn-primary">Edit</button>

                        </td>
                        <td>

                            <button type="submit" @onclick="@(()=>DeleteStudent(student))" class="mt-2 btn btn-danger">Delete</button>

                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>


}

@code {
    private List<StudentModel> students;

    protected override async Task OnInitializedAsync()
    {
        students = await StudentService.GetAllStudents();
    }

    private async void DeleteStudent(StudentModel student)
    {
        var response = await StudentService.DeleteStudent(student);
        if(response>0)
        {
            await OnInitializedAsync();
            this.StateHasChanged();
        }
    }

    private void EditStudent(int studentID)
    {
        NavManger.NavigateTo($"update_student/{studentID}");

    }
}
