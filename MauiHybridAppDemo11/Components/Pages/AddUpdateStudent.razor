@page "/add_student"
@page "/update_student/{StudentId:int}"
@using MauiHybridAppDemo11.Models
@using MauiHybridAppDemo11.Services
@inject IStudentService StudentService
<h3>AddUpdateStudent</h3>

<div class="Form-group">
    <label>First Name</label>
    <input @bind="firstName" class="form-control" placeholder="First Name"/>
</div>

<div class="Form-group">
    <label>Last Name</label>
    <input @bind="lastName" class="form-control" placeholder="Last Name"/>
</div>

<div class="Form-group">
    <label>Email Address</label>
    <input @bind="email" type="email" class="form-control" placeholder="Email Address"/>
</div>

<div class="mt-2 form-group">
    <lable>Gender</lable>
    <div class="d-flex flex-row">
        <div classs="col-6 d-flex justify-content-between">
            <div class="form-check">
                <input checked="@(gender=="Male")" @onchange="@(()=>setGender("male"))" class="form-check-input" type="radio" name="flexRadioDefault">
                <lable class="form-check-lable" for="flexRadioDefault">
                    Male
                </lable>
            </div>

            <div class="form-check">
                <input checked="@(gender=="Male")" @onchange="@(()=>setGender("Female"))" class="form-check-input" type="radio" name="flexRadioDefault2 ">
                <lable class="form-check-lable" for="flexRadioDefault2">
                    Female
                </lable>
            </div>
        </div>
    </div>
</div>

<button type="submit" @onclick="AddStudentRecord" class="mt-2 btn btn-primary">Submit</button>

@code {

    [Parameter]

    public int StudentID { get; set; }

    private string firstName;

    private string lastName;

    private string email;

    private string gender;

    private void setGender(string gender)
    {
        this.gender = gender;
    }

    protected override async Task OnInitializedAsync()
    {
        if(StudentID>0)
        {
            var response = await StudentService.GetStudentById(StudentID);
            if (response != null)
            {
                firstName = response.FirstName;
                lastName = response.LastName;
                email = response.Email;
                gender = response.Gender;
            }
        }
    }

    protected override async void OnInitialized()
    {
        base.OnInitialized();

        var id = StudentID;

        if(StudentID>0)
        {
            var response =await StudentService.GetStudentById(StudentID);
        }
    }

    private async void AddStudentRecord()
    {
        var StudentModel = new Models.StudentModel
            {
                FirstName = firstName,
                LastName = lastName,
                Email = email,
                Gender = gender,
                StudentId=StudentID


            };

        int response = -1;

        if (StudentID > 0)
        {
            response = await StudentService.UpdateStudent(StudentModel);
            //update record
        }

        else
        {
            response = await StudentService.AddStudent(StudentModel);
            //add record
        }
        
        if(response>0)
        {
            this.StateHasChanged();
            firstName = lastName = gender = email = "";
            await App.Current.MainPage.DisplayAlert("Record Added",
            "Record Saved To Student Table", "Ok");
        }

        else
        {
            await App.Current.MainPage.DisplayAlert("Oops",
            "Something went wrong while adding record", "Ok");
        }
    }

}
